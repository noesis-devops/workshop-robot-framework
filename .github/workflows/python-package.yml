name: Robot CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]  # or 3.10 if you prefer

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Python version
        run: |
          python --version

      #- name: Set up Python
      #  uses: actions/setup-python@v5
      #  with:
      #    python-version: ${{ matrix.python-version }}
      #    cache: 'pip'

      - name: Install Robot Framework dependencies
        run: |
          python -m pip install --upgrade pip
          # Install Robot Framework and the libraries you use:
          pip install robotframework
          # If you use Selenium:
          pip install robotframework-seleniumlibrary
          pip install webdrivermanager
          pip install rpaframework
          pip install python-dotenv
          # Project-specific dependencies:
          #if (Test-Path requirements.txt) { pip install -r requirements.txt }

      - name: Run Robot Framework tests
        env:
          TZ: Europe/Lisbon
          # Use GitHub Secrets for credentials:
          LOGIN_USERNAME: ${{ secrets.LOGIN_USERNAME }}
          LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
        run: |
          mkdir -p results
          robot \
            --output results/output.xml \
            --report results/report.html \
            --log results/log.html \
            -d results \
            ./Lab-05/tests/lab5_test.robot

          # Or run the whole test folder:
          # robot -d results ./Lab-05/tests

      - name: Convert Robot output to JUnit (optional but useful)
        run: |
          pip install robotframework-rebot
          rebot --xunit results/junit.xml results/output.xml

      - name: Upload Robot reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: robot-reports
          path: results/
